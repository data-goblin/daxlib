table SVG
	lineageTag: fc71a644-ec86-4b02-8cbe-a3b62e5b9769

	measure Bar =
			
			DaxLib.SVG.Bar(
			    100,
			    20,
			    'SVG'[Value],
			    BLANK(),
			    BLANK(),
			    BLANK()
			)
		displayFolder: SVG\Visuals
		lineageTag: 314490e4-1755-4532-a9f5-f07aedae8a3e
		dataCategory: ImageUrl

	measure Pill =
			
			VAR Width = 100
			VAR Height = 20
			
			RETURN
			
			    DaxLib.SVG.SVG(
			        Width,
			        Height,
			        BLANK(),
			        DaxLib.SVG.Compound.Pill(
			            Width * 0.98,
			            Height * 0.93,
			            MAX( SVG[Category] ),
			            "#CEDDEB",
			            "#2F6698"
			        ),
			        BLANK()
			    )
		displayFolder: SVG\Compounds
		lineageTag: 9c01df68-7f3e-486f-ba39-70e260a26808
		dataCategory: ImageUrl

	measure Txt = ```
			
			DaxLib.SVG.SVG( 
			    100, 
			    20,
			    BLANK(),
			    DaxLib.SVG.Element.Txt(
						10,             // X
						10, 	        // Y
						"SomeText",     //txt
						0,              // dx
			            0,              // dy
			            "fill:black;font-size:12px;font-family:Arial", // style
			            BLANK(),		// Class
			            BLANK()			// Transform
					),
			        BLANK()
			)
			```
		displayFolder: SVG\Elements
		lineageTag: f68968c6-ad1e-4871-8185-d3d2b2ca2e49
		dataCategory: ImageUrl

	measure Rect = ```
			
			DaxLib.SVG.SVG( 
			    100, 
			    20, 
			    BLANK(),
			    DaxLib.SVG.Element.Rect(
			        "50%",      // x: STRING
			        "0%",      // y: STRING
			        "40%",      // width: STRING
			        8,          // height: STRING
			        blank(),    // rx: STRING
			        blank(),    // ry: STRING
			        DaxLib.SVG.Style.Common(
			                "black",
			                0.3,
			                "black",
			                2,
			                0.9,
			                BLANK()
			            ),      // style: STRING
			        blank(),    // class: STRING
			        "rotate(5)"// transform: STRING
			    ),
			    BLANK()
			)
			```
		displayFolder: SVG\Elements
		lineageTag: 87155b89-ffcd-4fc0-8396-6ad38a537478
		dataCategory: ImageUrl

	measure Line = ```
			
			var LineStyle = 
			    DaxLib.SVG.Style.Common(
			        BLANK(),
			        BLANK(),
			        "blue",
			        2,
			        BLANK(),
			        BLANK()
			    )
			
			return
			
			DaxLib.SVG.SVG(
			    100,
			    20,
			    BLANK(),
			    DaxLib.SVG.Element.Line(
			        1,  // X1: INT64,          // The x position of the start point
			        5,  // Y1: INT64,          // The y position of the start point
			        80, // X2: INT64,          // The x position of the end point
			        5,  // Y2: INT64,          // The y position of the end point
			        LineStyle, // Style: STRING,      // The style to apply (e.g. "stroke:black;stroke-width:2")
			        BLANK(), // Transform: STRING,  // Optional: additional transforms
			        BLANK() // DefId: STRING      // Optional: ID of a defined line to use
			    ),
			    BLANK()
			)
			```
		displayFolder: SVG\Elements
		lineageTag: 37190c4a-0a1d-46c7-8d8a-0ccf9f2e8303
		dataCategory: ImageUrl

	measure Path =
			
			DaxLib.SVG.SVG(
			    100,
			    20,
			    BLANK(),
			    DaxLib.SVG.Element.Paths(
						"M10 10 L30 5 L90 15 L100 0",    // D: STRING
						DaxLib.SVG.Style.Common(
			                "#FFFFFF00",
			                BLANK(),
			                "blue",
			                BLANK(),
			                BLANK(),
			                BLANK()
			            ),                          // Style: STRING
						BLANK(),					//Transform: STRING
						BLANK()						// Class: STRING
					),
			        BLANK()
			)
		displayFolder: SVG\Elements
		lineageTag: b09066a5-dce4-49d1-b3f1-a0afd85d05f9
		dataCategory: ImageUrl

	measure Circle = ```
			
			DaxLib.SVG.SVG(
			    100,                // width:           STRING
			    20,                 // height:          STRING
			    BLANK(),            // viewbox:         STRING
			    DaxLib.SVG.Element.Circle(
			        50,             // width:           STRING
			        10,             // height:          STRING
			        "10%",          // r:               STRING
			        DaxLib.SVG.Style.Common(
			            "Blue",     // fill:            STRING
			            BLANK(),    // fillOpacity:     STRING
			            "Black",    // stroke:          STRING
			            1,          // strokeWidth:     INT64
			            BLANK(),    // strokeOpacity    DOUBLE
			            0.5         // opacity:         DOUBLE 
			        ),              // style:           STRING
			        BLANK(),        // class:           STRING
			        BLANK()         // transform:       STRING
			    ),
			    BLANK()             // sortValue:       STRING
			)
			```
		displayFolder: SVG\Elements
		lineageTag: 92072fdf-f75d-4f91-8e28-02e9cb597fa8
		dataCategory: ImageUrl

	measure Use = ```
			
			VAR _Defs =
			    DaxLib.SVG.Element.Defs(
			        DaxLib.SVG.Def.Circle(
			            "myCircle", // Id: STRING
			            0,          // CX: INT64
			            0,          // CY: INT64
			            8,          // R: INT64
			            BLANK(),    // Style: STRING
			            DaxLib.SVG.Style.Common(
			                "blue",
			                0.8,
			                "black",
			                1,
			                0.8,
			                BLANK()
			            ),    // Class: STRING
			            BLANK()     // Transform: STRING
			        ) &
			        DaxLib.SVG.Def.Paths(
			            "myPath",   // Id: STRING
			            "M10 10 L30 5 L90 15 L100 0",    // D: STRING
			            DaxLib.SVG.Style.Common(
			                BLANK(),
			                0,
			                "red",
			                BLANK(),
			                BLANK(),
			                BLANK()
			            ),
			            BLANK(),
			            BLANK()
			        )
			    )
			
			RETURN
			DaxLib.SVG.SVG(
			    100,  // Width
			    20,   // Height
			    BLANK(),
			    _Defs &
			    DaxLib.SVG.Element.UseDef(
			        "myCircle",     // Id: STRING
			        20,             // X: INT64
			        10,             // Y: INT64
			        BLANK(),        // Style: STRING
			        BLANK(),        // Class: STRING
			        "rotate(30)"    // Transform: STRING
			    ) &
			    DaxLib.SVG.Element.UseDef(
			        "myCircle",
			        50, 
			        10,
			        DaxLib.SVG.Style.Common(
			            "red",
			            BLANK(),
			            "black",
			            2,
			            0.7,
			            BLANK()
			        ),
			        BLANK(),
			        BLANK()
			    ) &
			    DaxLib.SVG.Element.UseDef(
			        "myCircle",
			        80, 
			        10,
			        BLANK(),
			        BLANK(),
			        BLANK()
			    ) &
			    DaxLib.SVG.Element.UseDef(
			        "myPath", 
			        BLANK(),
			        5,
			        BLANK(),
			        BLANK(),
			        BLANK()
			    ) &
			    DaxLib.SVG.Element.UseDef(
			        "myPath",
			        BLANK(),
			        10,
			        BLANK(),
			        DaxLib.SVG.Style.Common(
			            "blue",
			            BLANK(),
			            "blue",
			            3,
			            BLANK(),
			            BLANK()
			        ),
			        "rotate(-10)"
			    ),
			    BLANK()
			)
			```
		displayFolder: SVG\Elements
		lineageTag: 83356105-4da8-4006-9c35-b5f533a4055c
		dataCategory: ImageUrl

	measure 'Sum Value' = SUM( SVG[Value] )
		formatString: 0
		displayFolder: Sum
		lineageTag: 16f76255-7cf0-4631-a89e-8397ab223d2f

	measure 'Linear Gradient' =
			
			DaxLib.SVG.SVG(
			    100,
			    20,
			    BLANK(),
			    DaxLib.SVG.Element.Defs(
			        DaxLib.SVG.Def.LinearGradient(
			            "myGradient",
			            DaxLib.SVG.Def.GradientStop( "20%", "gold", BLANK() ) &
			            DaxLib.SVG.Def.GradientStop( "80%", "red", BLANK() ),
			            BLANK(),
			            BLANK(),
			            BLANK(),
			            BLANK()
			        )
			    ) &
			    DaxLib.SVG.Element.Rect(
			        2,
			        2,
			        "80%",
			        "80%",
			        BLANK(),
			        BLANK(),
			        DaxLib.SVG.Style.Common(
			            "url(""" & "#myGradient" & """)",
			            BLANK(),
			            BLANK(),
			            BLANK(),
			            BLANK(),
			            BLANK()
			        ),
			        BLANK(),
			        BLANK()
			    ),
			    BLANK()
			)
		displayFolder: SVG\Defs
		lineageTag: c4285bff-3b51-465f-906e-be7706f858ef
		dataCategory: ImageUrl

	measure 'Radial Gradient' =
			
			DaxLib.SVG.SVG(
			    100,
			    20,
			    BLANK(),
			    DaxLib.SVG.Element.Defs(
			        DaxLib.SVG.Def.RadialGradient(
			            "myGradient",
			            DaxLib.SVG.Def.GradientStop( "18%", "gold", BLANK() ) &
			            DaxLib.SVG.Def.GradientStop( "30%", "black", BLANK() ) &
			            DaxLib.SVG.Def.GradientStop( "95%", "red", BLANK() ),
			            BLANK(),
			            BLANK(),
			            BLANK(),
			            BLANK(),
			            BLANK(),
			            BLANK()
			        )
			    ) &
			    DaxLib.SVG.Element.Circle(
			        "50%",
			        "50%",
			        10,
			        DaxLib.SVG.Style.Common(
			            "url(""" & "#myGradient" & """)",
			            BLANK(),
			            BLANK(),
			            BLANK(),
			            BLANK(),
			            BLANK()
			        ),
			        BLANK(),
			        BLANK()
			    ),
			    BLANK()
			)
		displayFolder: SVG\Defs
		lineageTag: fc5b8b49-b24c-4278-ac3b-b217eefbf556
		dataCategory: ImageUrl

	measure 'Clip Path' = ```
			
			VAR _Defs = 
			    DaxLib.SVG.Element.Defs(
			        DaxLib.SVG.Def.ClipPath(
			            "clip-circle",  // clipPath id
			            DaxLib.SVG.Element.Circle(
			                "50%",         // cx 
			                "80%",        // cy
			                8,         // radius
			                BLANK(),    // style
			                BLANK(),    // class
			                BLANK()     // transform
			            )
			        )
			    )
			
			VAR _Rectangle = 
			    DaxLib.SVG.Element.Rect(
			        "45%",          // x
			        "20%",          // y
			        "70%",        // width
			        "70%",         // height
			        BLANK(),    // rx
			        BLANK(),    // ry
			        DaxLib.SVG.Style.Common(
			            "blue",     // fill
			            BLANK(),    // fillOpacity
			            BLANK(),    // stroke
			            BLANK(),    // strokeWidth 
			            BLANK(),    // strokeOpacity
			            BLANK()     // opacity
			        ) & 
			        "clip-path:url(#clip-circle);",  // Add clip-path reference
			        BLANK(),    // class
			        BLANK()     // transform
			    )
			
			RETURN
			DaxLib.SVG.SVG(
			    100,        // width
			    20,         // height
			    BLANK(),    // viewbox
			    _Defs &     // definitions including clipPath
			    _Rectangle, // clipped rectangle
			    BLANK()     // sortValue
			)
			```
		displayFolder: SVG\Defs
		lineageTag: 0ee21ac1-95fc-44e3-89d5-6a67c09cd0ed
		dataCategory: ImageUrl

	measure 'Action Dot' =
			
			DaxLib.SVG.BulletChart.ActionDot(
			    [Sum Actual],       // Actual value
			    [Sum Forecast],     // Target/Forecast value
			    SVG[Category],      // Category column
			    -0.07,              // thresholdVeryBad
			    -0.03,              // thresholdBad
			    -0.01,              // thresholdGood
			    1,                  // thresholdVeryGood
			    "#FF0000",          // colourBadLow:      Red for very bad
			    "#FFA500",          // colourBadHigh:     Orange for bad
			    "#008000",          // colourGoodLow:     Green for good
			    "#0000FF"           // colourGoodHigh:    Blue for very good
			)
		displayFolder: SVG\Visuals
		lineageTag: 1f33fac1-e97c-4d47-b2b5-ca9da397ee55
		dataCategory: ImageUrl

	measure 'Sum Actual' = SUM( SVG[Actual] )
		formatString: 0
		displayFolder: Sum
		lineageTag: 43016c94-1dbf-4e37-b248-e7a9a27ba708

	measure 'Sum Forecast' = SUM( SVG[Forecast] )
		formatString: 0
		displayFolder: Sum
		lineageTag: 5fd255dd-6e55-45bb-b332-1baaaf8186f4

	measure performance = DIVIDE ( [Sum Actual] - [Sum Forecast], [Sum Forecast] )
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 1d5e8626-74bb-44f2-9cbc-9301bd7ccba4

	column Category
		lineageTag: 6e36a015-f9be-44e9-8443-bac8162c7e2a
		summarizeBy: none
		isNameInferred
		sourceColumn: [Category]

		annotation SummarizationSetBy = Automatic

	column Value
		isHidden
		formatString: 0
		displayFolder: _Hidden
		lineageTag: 69ad6815-829f-4dd6-aebd-683bbdf2da4b
		summarizeBy: none
		isNameInferred
		sourceColumn: [Value]

		annotation SummarizationSetBy = User

	column Subcategory
		lineageTag: 30846da1-2776-4533-b462-682f276c4838
		summarizeBy: none
		isNameInferred
		sourceColumn: [Subcategory]

		annotation SummarizationSetBy = Automatic

	column Region
		lineageTag: 9de86e50-b1d3-48c6-bdac-c1636c1cbd5d
		summarizeBy: none
		isNameInferred
		sourceColumn: [Region]

		annotation SummarizationSetBy = Automatic

	column Quarter
		lineageTag: 34d5411f-e8ae-43ba-b15b-90e2ab6a9559
		summarizeBy: none
		isNameInferred
		sourceColumn: [Quarter]

		annotation SummarizationSetBy = Automatic

	column Actual
		isHidden
		formatString: 0
		displayFolder: _Hidden
		lineageTag: 6739dc6d-8510-4707-90f1-9ee0432027d7
		summarizeBy: none
		isNameInferred
		sourceColumn: [Actual]

		annotation SummarizationSetBy = User

	column Forecast
		isHidden
		formatString: 0
		displayFolder: _Hidden
		lineageTag: dd35ba3f-a78a-4f9c-b5db-8f8df027f661
		summarizeBy: none
		isNameInferred
		sourceColumn: [Forecast]

		annotation SummarizationSetBy = User

	partition SVG = calculated
		mode: import
		source = ```
				
				DATATABLE(
				    "Category", STRING,
				    "Subcategory", STRING,
				    "Region", STRING,
				    "Quarter", STRING,
				    "Value", INTEGER,
				    "Actual", INTEGER,
				    "Forecast", INTEGER,
				    {
				        // Technology Sector
				        {"Technology", "Software", "North America", "Q1", 145000, 142000, 148000},
				        {"Technology", "Software", "North America", "Q2", 152000, 151000, 155000},
				        {"Technology", "Software", "North America", "Q3", 168000, 165000, 171000},
				        {"Technology", "Software", "North America", "Q4", 174000, 172000, 178000},
				        {"Technology", "Software", "Europe", "Q1", 128000, 126000, 130000},
				        {"Technology", "Software", "Europe", "Q2", 135000, 133000, 137000},
				        {"Technology", "Software", "Europe", "Q3", 142000, 140000, 145000},
				        {"Technology", "Software", "Europe", "Q4", 149000, 147000, 152000},
				        {"Technology", "Software", "Asia Pacific", "Q1", 112000, 110000, 115000},
				        {"Technology", "Software", "Asia Pacific", "Q2", 119000, 117000, 122000},
				        {"Technology", "Software", "Asia Pacific", "Q3", 125000, 123000, 128000},
				        {"Technology", "Software", "Asia Pacific", "Q4", 132000, 130000, 135000},
				        
				        {"Technology", "Hardware", "North America", "Q1", 98000, 95000, 101000},
				        {"Technology", "Hardware", "North America", "Q2", 102000, 100000, 105000},
				        {"Technology", "Hardware", "North America", "Q3", 95000, 93000, 98000},
				        {"Technology", "Hardware", "North America", "Q4", 108000, 106000, 112000},
				        {"Technology", "Hardware", "Europe", "Q1", 85000, 83000, 88000},
				        {"Technology", "Hardware", "Europe", "Q2", 89000, 87000, 92000},
				        {"Technology", "Hardware", "Europe", "Q3", 92000, 90000, 95000},
				        {"Technology", "Hardware", "Europe", "Q4", 96000, 94000, 99000},
				        {"Technology", "Hardware", "Asia Pacific", "Q1", 156000, 153000, 159000},
				        {"Technology", "Hardware", "Asia Pacific", "Q2", 162000, 160000, 165000},
				        {"Technology", "Hardware", "Asia Pacific", "Q3", 158000, 156000, 161000},
				        {"Technology", "Hardware", "Asia Pacific", "Q4", 171000, 169000, 174000},
				        
				        {"Technology", "Cloud Services", "North America", "Q1", 189000, 186000, 192000},
				        {"Technology", "Cloud Services", "North America", "Q2", 195000, 193000, 198000},
				        {"Technology", "Cloud Services", "North America", "Q3", 201000, 199000, 204000},
				        {"Technology", "Cloud Services", "North America", "Q4", 218000, 216000, 221000},
				        {"Technology", "Cloud Services", "Europe", "Q1", 142000, 140000, 145000},
				        {"Technology", "Cloud Services", "Europe", "Q2", 148000, 146000, 151000},
				        {"Technology", "Cloud Services", "Europe", "Q3", 155000, 153000, 158000},
				        {"Technology", "Cloud Services", "Europe", "Q4", 161000, 159000, 164000},
				        {"Technology", "Cloud Services", "Asia Pacific", "Q1", 134000, 132000, 137000},
				        {"Technology", "Cloud Services", "Asia Pacific", "Q2", 141000, 139000, 144000},
				        {"Technology", "Cloud Services", "Asia Pacific", "Q3", 147000, 145000, 150000},
				        {"Technology", "Cloud Services", "Asia Pacific", "Q4", 153000, 151000, 156000},
				        
				        // Healthcare Sector
				        {"Healthcare", "Pharmaceuticals", "North America", "Q1", 234000, 231000, 237000},
				        {"Healthcare", "Pharmaceuticals", "North America", "Q2", 241000, 239000, 244000},
				        {"Healthcare", "Pharmaceuticals", "North America", "Q3", 238000, 236000, 241000},
				        {"Healthcare", "Pharmaceuticals", "North America", "Q4", 245000, 243000, 248000},
				        {"Healthcare", "Pharmaceuticals", "Europe", "Q1", 198000, 196000, 201000},
				        {"Healthcare", "Pharmaceuticals", "Europe", "Q2", 205000, 203000, 208000},
				        {"Healthcare", "Pharmaceuticals", "Europe", "Q3", 212000, 210000, 215000},
				        {"Healthcare", "Pharmaceuticals", "Europe", "Q4", 219000, 217000, 222000},
				        {"Healthcare", "Pharmaceuticals", "Asia Pacific", "Q1", 156000, 154000, 159000},
				        {"Healthcare", "Pharmaceuticals", "Asia Pacific", "Q2", 163000, 161000, 166000},
				        {"Healthcare", "Pharmaceuticals", "Asia Pacific", "Q3", 159000, 157000, 162000},
				        {"Healthcare", "Pharmaceuticals", "Asia Pacific", "Q4", 167000, 165000, 170000},
				        
				        {"Healthcare", "Medical Devices", "North America", "Q1", 178000, 176000, 181000},
				        {"Healthcare", "Medical Devices", "North America", "Q2", 185000, 183000, 188000},
				        {"Healthcare", "Medical Devices", "North America", "Q3", 182000, 180000, 185000},
				        {"Healthcare", "Medical Devices", "North America", "Q4", 191000, 189000, 194000},
				        {"Healthcare", "Medical Devices", "Europe", "Q1", 145000, 143000, 148000},
				        {"Healthcare", "Medical Devices", "Europe", "Q2", 152000, 150000, 155000},
				        {"Healthcare", "Medical Devices", "Europe", "Q3", 149000, 147000, 152000},
				        {"Healthcare", "Medical Devices", "Europe", "Q4", 156000, 154000, 159000},
				        {"Healthcare", "Medical Devices", "Asia Pacific", "Q1", 123000, 121000, 126000},
				        {"Healthcare", "Medical Devices", "Asia Pacific", "Q2", 128000, 126000, 131000},
				        {"Healthcare", "Medical Devices", "Asia Pacific", "Q3", 131000, 129000, 134000},
				        {"Healthcare", "Medical Devices", "Asia Pacific", "Q4", 135000, 133000, 138000},
				        
				        {"Healthcare", "Healthcare Services", "North America", "Q1", 89000, 87000, 92000},
				        {"Healthcare", "Healthcare Services", "North America", "Q2", 92000, 90000, 95000},
				        {"Healthcare", "Healthcare Services", "North America", "Q3", 95000, 93000, 98000},
				        {"Healthcare", "Healthcare Services", "North America", "Q4", 98000, 96000, 101000},
				        {"Healthcare", "Healthcare Services", "Europe", "Q1", 76000, 74000, 79000},
				        {"Healthcare", "Healthcare Services", "Europe", "Q2", 79000, 77000, 82000},
				        {"Healthcare", "Healthcare Services", "Europe", "Q3", 82000, 80000, 85000},
				        {"Healthcare", "Healthcare Services", "Europe", "Q4", 85000, 83000, 88000},
				        {"Healthcare", "Healthcare Services", "Asia Pacific", "Q1", 67000, 65000, 70000},
				        {"Healthcare", "Healthcare Services", "Asia Pacific", "Q2", 71000, 69000, 74000},
				        {"Healthcare", "Healthcare Services", "Asia Pacific", "Q3", 74000, 72000, 77000},
				        {"Healthcare", "Healthcare Services", "Asia Pacific", "Q4", 78000, 76000, 81000},
				        
				        // Finance Sector
				        {"Finance", "Investment Banking", "North America", "Q1", 298000, 295000, 302000},
				        {"Finance", "Investment Banking", "North America", "Q2", 312000, 310000, 315000},
				        {"Finance", "Investment Banking", "North America", "Q3", 305000, 303000, 308000},
				        {"Finance", "Investment Banking", "North America", "Q4", 325000, 323000, 328000},
				        {"Finance", "Investment Banking", "Europe", "Q1", 245000, 243000, 248000},
				        {"Finance", "Investment Banking", "Europe", "Q2", 252000, 250000, 255000},
				        {"Finance", "Investment Banking", "Europe", "Q3", 248000, 246000, 251000},
				        {"Finance", "Investment Banking", "Europe", "Q4", 259000, 257000, 262000},
				        {"Finance", "Investment Banking", "Asia Pacific", "Q1", 198000, 196000, 201000},
				        {"Finance", "Investment Banking", "Asia Pacific", "Q2", 205000, 203000, 208000},
				        {"Finance", "Investment Banking", "Asia Pacific", "Q3", 212000, 210000, 215000},
				        {"Finance", "Investment Banking", "Asia Pacific", "Q4", 219000, 217000, 222000},
				        
				        {"Finance", "Retail Banking", "North America", "Q1", 156000, 154000, 159000},
				        {"Finance", "Retail Banking", "North America", "Q2", 162000, 160000, 165000},
				        {"Finance", "Retail Banking", "North America", "Q3", 159000, 157000, 162000},
				        {"Finance", "Retail Banking", "North America", "Q4", 167000, 165000, 170000},
				        {"Finance", "Retail Banking", "Europe", "Q1", 134000, 132000, 137000},
				        {"Finance", "Retail Banking", "Europe", "Q2", 139000, 137000, 142000},
				        {"Finance", "Retail Banking", "Europe", "Q3", 142000, 140000, 145000},
				        {"Finance", "Retail Banking", "Europe", "Q4", 146000, 144000, 149000},
				        {"Finance", "Retail Banking", "Asia Pacific", "Q1", 128000, 126000, 131000},
				        {"Finance", "Retail Banking", "Asia Pacific", "Q2", 132000, 130000, 135000},
				        {"Finance", "Retail Banking", "Asia Pacific", "Q3", 135000, 133000, 138000},
				        {"Finance", "Retail Banking", "Asia Pacific", "Q4", 139000, 137000, 142000},
				        
				        {"Finance", "Insurance", "North America", "Q1", 189000, 187000, 192000},
				        {"Finance", "Insurance", "North America", "Q2", 195000, 193000, 198000},
				        {"Finance", "Insurance", "North America", "Q3", 192000, 190000, 195000},
				        {"Finance", "Insurance", "North America", "Q4", 201000, 199000, 204000},
				        {"Finance", "Insurance", "Europe", "Q1", 167000, 165000, 170000},
				        {"Finance", "Insurance", "Europe", "Q2", 172000, 170000, 175000},
				        {"Finance", "Insurance", "Europe", "Q3", 169000, 167000, 172000},
				        {"Finance", "Insurance", "Europe", "Q4", 176000, 174000, 179000},
				        {"Finance", "Insurance", "Asia Pacific", "Q1", 145000, 143000, 148000},
				        {"Finance", "Insurance", "Asia Pacific", "Q2", 151000, 149000, 154000},
				        {"Finance", "Insurance", "Asia Pacific", "Q3", 148000, 146000, 151000},
				        {"Finance", "Insurance", "Asia Pacific", "Q4", 154000, 152000, 157000},
				        
				        // Education Sector
				        {"Education", "Higher Education", "North America", "Q1", 92000, 90000, 95000},
				        {"Education", "Higher Education", "North America", "Q2", 89000, 87000, 92000},
				        {"Education", "Higher Education", "North America", "Q3", 95000, 93000, 98000},
				        {"Education", "Higher Education", "North America", "Q4", 98000, 96000, 101000},
				        {"Education", "Higher Education", "Europe", "Q1", 78000, 76000, 81000},
				        {"Education", "Higher Education", "Europe", "Q2", 81000, 79000, 84000},
				        {"Education", "Higher Education", "Europe", "Q3", 84000, 82000, 87000},
				        {"Education", "Higher Education", "Europe", "Q4", 87000, 85000, 90000},
				        {"Education", "Higher Education", "Asia Pacific", "Q1", 71000, 69000, 74000},
				        {"Education", "Higher Education", "Asia Pacific", "Q2", 74000, 72000, 77000},
				        {"Education", "Higher Education", "Asia Pacific", "Q3", 77000, 75000, 80000},
				        {"Education", "Higher Education", "Asia Pacific", "Q4", 79000, 77000, 82000},
				        
				        {"Education", "K-12 Education", "North America", "Q1", 65000, 63000, 68000},
				        {"Education", "K-12 Education", "North America", "Q2", 68000, 66000, 71000},
				        {"Education", "K-12 Education", "North America", "Q3", 71000, 69000, 74000},
				        {"Education", "K-12 Education", "North America", "Q4", 73000, 71000, 76000},
				        {"Education", "K-12 Education", "Europe", "Q1", 58000, 56000, 61000},
				        {"Education", "K-12 Education", "Europe", "Q2", 61000, 59000, 64000},
				        {"Education", "K-12 Education", "Europe", "Q3", 63000, 61000, 66000},
				        {"Education", "K-12 Education", "Europe", "Q4", 66000, 64000, 69000},
				        {"Education", "K-12 Education", "Asia Pacific", "Q1", 52000, 50000, 55000},
				        {"Education", "K-12 Education", "Asia Pacific", "Q2", 54000, 52000, 57000},
				        {"Education", "K-12 Education", "Asia Pacific", "Q3", 57000, 55000, 60000},
				        {"Education", "K-12 Education", "Asia Pacific", "Q4", 59000, 57000, 62000},
				        
				        {"Education", "Online Learning", "North America", "Q1", 45000, 43000, 48000},
				        {"Education", "Online Learning", "North America", "Q2", 48000, 46000, 51000},
				        {"Education", "Online Learning", "North America", "Q3", 52000, 50000, 55000},
				        {"Education", "Online Learning", "North America", "Q4", 55000, 53000, 58000},
				        {"Education", "Online Learning", "Europe", "Q1", 38000, 36000, 41000},
				        {"Education", "Online Learning", "Europe", "Q2", 41000, 39000, 44000},
				        {"Education", "Online Learning", "Europe", "Q3", 44000, 42000, 47000},
				        {"Education", "Online Learning", "Europe", "Q4", 47000, 45000, 50000},
				        {"Education", "Online Learning", "Asia Pacific", "Q1", 42000, 40000, 45000},
				        {"Education", "Online Learning", "Asia Pacific", "Q2", 45000, 43000, 48000},
				        {"Education", "Online Learning", "Asia Pacific", "Q3", 48000, 46000, 51000},
				        {"Education", "Online Learning", "Asia Pacific", "Q4", 51000, 49000, 54000},
				        
				        // Retail Sector
				        {"Retail", "E-commerce", "North America", "Q1", 123000, 121000, 126000},
				        {"Retail", "E-commerce", "North America", "Q2", 129000, 127000, 132000},
				        {"Retail", "E-commerce", "North America", "Q3", 135000, 133000, 138000},
				        {"Retail", "E-commerce", "North America", "Q4", 142000, 140000, 145000},
				        {"Retail", "E-commerce", "Europe", "Q1", 98000, 96000, 101000},
				        {"Retail", "E-commerce", "Europe", "Q2", 102000, 100000, 105000},
				        {"Retail", "E-commerce", "Europe", "Q3", 106000, 104000, 109000},
				        {"Retail", "E-commerce", "Europe", "Q4", 111000, 109000, 114000},
				        {"Retail", "E-commerce", "Asia Pacific", "Q1", 156000, 154000, 159000},
				        {"Retail", "E-commerce", "Asia Pacific", "Q2", 163000, 161000, 166000},
				        {"Retail", "E-commerce", "Asia Pacific", "Q3", 169000, 167000, 172000},
				        {"Retail", "E-commerce", "Asia Pacific", "Q4", 176000, 174000, 179000},
				        
				        {"Retail", "Traditional Retail", "North America", "Q1", -25000, -23000, -27000},
				        {"Retail", "Traditional Retail", "North America", "Q2", -28000, -26000, -30000},
				        {"Retail", "Traditional Retail", "North America", "Q3", -22000, -20000, -24000},
				        {"Retail", "Traditional Retail", "North America", "Q4", -19000, -17000, -21000},
				        {"Retail", "Traditional Retail", "Europe", "Q1", -35000, -33000, -37000},
				        {"Retail", "Traditional Retail", "Europe", "Q2", -32000, -30000, -34000},
				        {"Retail", "Traditional Retail", "Europe", "Q3", -38000, -36000, -40000},
				        {"Retail", "Traditional Retail", "Europe", "Q4", -41000, -39000, -43000},
				        {"Retail", "Traditional Retail", "Asia Pacific", "Q1", -15000, -13000, -17000},
				        {"Retail", "Traditional Retail", "Asia Pacific", "Q2", -12000, -10000, -14000},
				        {"Retail", "Traditional Retail", "Asia Pacific", "Q3", -18000, -16000, -20000},
				        {"Retail", "Traditional Retail", "Asia Pacific", "Q4", -21000, -19000, -23000},
				        
				        {"Retail", "Specialty Retail", "North America", "Q1", 67000, 65000, 70000},
				        {"Retail", "Specialty Retail", "North America", "Q2", 71000, 69000, 74000},
				        {"Retail", "Specialty Retail", "North America", "Q3", 74000, 72000, 77000},
				        {"Retail", "Specialty Retail", "North America", "Q4", 78000, 76000, 81000},
				        {"Retail", "Specialty Retail", "Europe", "Q1", 56000, 54000, 59000},
				        {"Retail", "Specialty Retail", "Europe", "Q2", 59000, 57000, 62000},
				        {"Retail", "Specialty Retail", "Europe", "Q3", 62000, 60000, 65000},
				        {"Retail", "Specialty Retail", "Europe", "Q4", 65000, 63000, 68000},
				        {"Retail", "Specialty Retail", "Asia Pacific", "Q1", 48000, 46000, 51000},
				        {"Retail", "Specialty Retail", "Asia Pacific", "Q2", 51000, 49000, 54000},
				        {"Retail", "Specialty Retail", "Asia Pacific", "Q3", 54000, 52000, 57000},
				        {"Retail", "Specialty Retail", "Asia Pacific", "Q4", 57000, 55000, 60000},
				        
				        // Manufacturing Sector
				        {"Manufacturing", "Automotive", "North America", "Q1", 189000, 187000, 192000},
				        {"Manufacturing", "Automotive", "North America", "Q2", 195000, 193000, 198000},
				        {"Manufacturing", "Automotive", "North America", "Q3", 178000, 176000, 181000},
				        {"Manufacturing", "Automotive", "North America", "Q4", 201000, 199000, 204000},
				        {"Manufacturing", "Automotive", "Europe", "Q1", 156000, 154000, 159000},
				        {"Manufacturing", "Automotive", "Europe", "Q2", 162000, 160000, 165000},
				        {"Manufacturing", "Automotive", "Europe", "Q3", 149000, 147000, 152000},
				        {"Manufacturing", "Automotive", "Europe", "Q4", 167000, 165000, 170000},
				        {"Manufacturing", "Automotive", "Asia Pacific", "Q1", 234000, 232000, 237000},
				        {"Manufacturing", "Automotive", "Asia Pacific", "Q2", 241000, 239000, 244000},
				        {"Manufacturing", "Automotive", "Asia Pacific", "Q3", 228000, 226000, 231000},
				        {"Manufacturing", "Automotive", "Asia Pacific", "Q4", 252000, 250000, 255000},
				        
				        {"Manufacturing", "Electronics", "North America", "Q1", 145000, 143000, 148000},
				        {"Manufacturing", "Electronics", "North America", "Q2", 151000, 149000, 154000},
				        {"Manufacturing", "Electronics", "North America", "Q3", 148000, 146000, 151000},
				        {"Manufacturing", "Electronics", "North America", "Q4", 154000, 152000, 157000},
				        {"Manufacturing", "Electronics", "Europe", "Q1", 123000, 121000, 126000},
				        {"Manufacturing", "Electronics", "Europe", "Q2", 128000, 126000, 131000},
				        {"Manufacturing", "Electronics", "Europe", "Q3", 131000, 129000, 134000},
				        {"Manufacturing", "Electronics", "Europe", "Q4", 135000, 133000, 138000},
				        {"Manufacturing", "Electronics", "Asia Pacific", "Q1", 298000, 296000, 301000},
				        {"Manufacturing", "Electronics", "Asia Pacific", "Q2", 312000, 310000, 315000},
				        {"Manufacturing", "Electronics", "Asia Pacific", "Q3", 305000, 303000, 308000},
				        {"Manufacturing", "Electronics", "Asia Pacific", "Q4", 325000, 323000, 328000},
				        
				        {"Manufacturing", "Industrial Equipment", "North America", "Q1", 112000, 110000, 115000},
				        {"Manufacturing", "Industrial Equipment", "North America", "Q2", 118000, 116000, 121000},
				        {"Manufacturing", "Industrial Equipment", "North America", "Q3", 115000, 113000, 118000},
				        {"Manufacturing", "Industrial Equipment", "North America", "Q4", 121000, 119000, 124000},
				        {"Manufacturing", "Industrial Equipment", "Europe", "Q1", 98000, 96000, 101000},
				        {"Manufacturing", "Industrial Equipment", "Europe", "Q2", 102000, 100000, 105000},
				        {"Manufacturing", "Industrial Equipment", "Europe", "Q3", 105000, 103000, 108000},
				        {"Manufacturing", "Industrial Equipment", "Europe", "Q4", 109000, 107000, 112000},
				        {"Manufacturing", "Industrial Equipment", "Asia Pacific", "Q1", 89000, 87000, 92000},
				        {"Manufacturing", "Industrial Equipment", "Asia Pacific", "Q2", 92000, 90000, 95000},
				        {"Manufacturing", "Industrial Equipment", "Asia Pacific", "Q3", 95000, 93000, 98000},
				        {"Manufacturing", "Industrial Equipment", "Asia Pacific", "Q4", 98000, 96000, 101000},
				        
				        // Energy Sector
				        {"Energy", "Renewable Energy", "North America", "Q1", 198000, 196000, 201000},
				        {"Energy", "Renewable Energy", "North America", "Q2", 205000, 203000, 208000},
				        {"Energy", "Renewable Energy", "North America", "Q3", 212000, 210000, 215000},
				        {"Energy", "Renewable Energy", "North America", "Q4", 219000, 217000, 222000},
				        {"Energy", "Renewable Energy", "Europe", "Q1", 234000, 232000, 237000},
				        {"Energy", "Renewable Energy", "Europe", "Q2", 241000, 239000, 244000},
				        {"Energy", "Renewable Energy", "Europe", "Q3", 248000, 246000, 251000},
				        {"Energy", "Renewable Energy", "Europe", "Q4", 255000, 253000, 258000},
				        {"Energy", "Renewable Energy", "Asia Pacific", "Q1", 167000, 165000, 170000},
				        {"Energy", "Renewable Energy", "Asia Pacific", "Q2", 172000, 170000, 175000},
				        {"Energy", "Renewable Energy", "Asia Pacific", "Q3", 178000, 176000, 181000},
				        {"Energy", "Renewable Energy", "Asia Pacific", "Q4", 183000, 181000, 186000},
				        
				        {"Energy", "Oil & Gas", "North America", "Q1", 156000, 154000, 159000},
				        {"Energy", "Oil & Gas", "North America", "Q2", 149000, 147000, 152000},
				        {"Energy", "Oil & Gas", "North America", "Q3", 162000, 160000, 165000},
				        {"Energy", "Oil & Gas", "North America", "Q4", 158000, 156000, 161000},
				        {"Energy", "Oil & Gas", "Europe", "Q1", 128000, 126000, 131000},
				        {"Energy", "Oil & Gas", "Europe", "Q2", 123000, 121000, 126000},
				        {"Energy", "Oil & Gas", "Europe", "Q3", 134000, 132000, 137000},
				        {"Energy", "Oil & Gas", "Europe", "Q4", 131000, 129000, 134000},
				        {"Energy", "Oil & Gas", "Asia Pacific", "Q1", 145000, 143000, 148000},
				        {"Energy", "Oil & Gas", "Asia Pacific", "Q2", 139000, 137000, 142000},
				        {"Energy", "Oil & Gas", "Asia Pacific", "Q3", 151000, 149000, 154000},
				        {"Energy", "Oil & Gas", "Asia Pacific", "Q4", 148000, 146000, 151000},
				        
				        {"Energy", "Utilities", "North America", "Q1", 89000, 87000, 92000},
				        {"Energy", "Utilities", "North America", "Q2", 92000, 90000, 95000},
				        {"Energy", "Utilities", "North America", "Q3", 95000, 93000, 98000},
				        {"Energy", "Utilities", "North America", "Q4", 98000, 96000, 101000},
				        {"Energy", "Utilities", "Europe", "Q1", 78000, 76000, 81000},
				        {"Energy", "Utilities", "Europe", "Q2", 81000, 79000, 84000},
				        {"Energy", "Utilities", "Europe", "Q3", 84000, 82000, 87000},
				        {"Energy", "Utilities", "Europe", "Q4", 87000, 85000, 90000},
				        {"Energy", "Utilities", "Asia Pacific", "Q1", 71000, 69000, 74000},
				        {"Energy", "Utilities", "Asia Pacific", "Q2", 74000, 72000, 77000},
				        {"Energy", "Utilities", "Asia Pacific", "Q3", 77000, 75000, 80000},
				        {"Energy", "Utilities", "Asia Pacific", "Q4", 80000, 78000, 83000}
				    }
				)
				```

	annotation PBI_Id = dd4f35947dae48a1981020aadef84e92

